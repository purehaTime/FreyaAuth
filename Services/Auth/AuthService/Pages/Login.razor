@page "/"
@page "/login"
@using Models.Models.AuthService
@using Models.Models.AuthService
@using AuthService.Interfaces
@inject IUserService _userService
@inject IHttpContextAccessor _httpContext

<MudStack Justify="Justify.Center" Style="height: 60vh">
    <MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="rounded-sm">
        @if (!_complete)
        {
            <MudForm @bind-IsValid="_isSuccess" @ref="_form" Model="@_loginModel">
                <MudCard>
                    <MudCardHeader Class="d-flex justify-center">
                        <MudText Typo="Typo.h4">Login</MudText>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudStack>
                            <MudTextField T="string"
                                          Label="Login"
                                          Required="true"
                                          RequiredError="Login is required!"
                                          @bind-Value="_loginModel.Email"/>
                            <MudTextField T="string"
                                          Label="Password"
                                          InputType="InputType.Password"
                                          Required="true"
                                          RequiredError="Password is required!"
                                          @bind-Value="_loginModel.Password"/>
                        </MudStack>
                    </MudCardContent>
                    <MudCardActions Class="d-flex justify-center">
                        <MudButton Class="mud-theme-primary rounded-sm" OnClick="UserLogin">Continue</MudButton>
                    </MudCardActions>
                    <MudCardActions Class="d-flex justify-center">
                        <MudButton Class="mud-theme-primary" IconClass="" OnClick="UserLogin">Continue</MudButton>
                    </MudCardActions>
                    <MudOverlay Visible="_overlayVisible" DarkBackground="true" Absolute="true">
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                    </MudOverlay>
                </MudCard>
            </MudForm>
        }
        else
        {
            <MudCard>
                <MudCardHeader Class="d-flex justify-center">
                    @if (_authResult.IsSuccess)
                    {
                        <MudText Typo="Typo.h4" Color="Color.Success">Complete</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.h4" Color="Color.Error">Error</MudText>
                    }
                </MudCardHeader>
                <MudCardContent>
                    <MudText>@_message</MudText>
                </MudCardContent>
            </MudCard>
        }
    </MudContainer>
</MudStack>

@code {
    
    private readonly AuthModel _loginModel = new();
    private bool _isSuccess;
    private string _message = "";
    private MudForm _form;
    private bool _complete;
    private UserAuthResult _authResult = new();
    private bool _overlayVisible = true;
    
    public async Task UserLogin()
    {
        _overlayVisible = true;
        _loginModel.IPAddress = _httpContext.HttpContext?.Connection?.RemoteIpAddress?.ToString();
        _authResult = await _userService.Login(_loginModel);
        _message = _authResult.Message;
        _overlayVisible = false;
    }
}